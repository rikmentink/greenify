name: Release new version

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'

jobs:
  build-frontend:
    name: Compile the frontend
    runs-on: ubuntu-latest
    outputs:
      frontend-artifact-path: ${{ steps.build_frontend.outputs.artifact-path }}  
    env:
      working-directory: ./client
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Perform a clean install
        run: npm ci
      - name: Build and compile the project
        run: npm run build
      - name: Upload frontend artifact to workspace
        id: build_frontend
        uses: actions/upload-artifact@v3
        with:
          name: client
          path: ./dist
  build-backend:
    name: Compile the backend
    runs-on: ubuntu-latest
    env:
      working-directory: ./server
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.6
      - name: Build and test the backend
        run: mvn -B clean package test -D spring.profiles.active=ci
      - name: Upload backend artifact to workspace
        id: build_backend
        uses: actions/upload-artifact@v3
        with:
          name: backend-artifact
          path: ./target

  create-release:
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-artifact
      - name: Download backend artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-artifact
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Frontend Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./frontend-artifact
          asset_name: frontend.zip
          asset_content_type: application/zip
      - name: Upload Backend Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./backend-artifact/*.jar
          asset_name: server.jar
          asset_content_type: application/java-archive