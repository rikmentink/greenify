name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: cd client && npm install

      - name: Build frontend
        run: cd client && npm run build
    
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: client/dist/

  build-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build backend
        run: cd server && mvn -B verify -D spring.profiles.active=ci pitest:mutationCoverage
    
      - name: Save repository name
        run: echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
        shell: bash
    
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend
          path: server/target/

      - name: Upload test reports
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.REPOSITORY_NAME }}-reports
          path: |
            server/target/site/jacoco/
            server/target/pit-reports/
  
  deploy-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend
    
      - name: Set credentials based on trigger
        id: credentials
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "::set-output name=app-name::${{ secrets.FRONTEND_PROD_APP_NAME }}"
            echo "::set-output name=publish-profile::${{ secrets.FRONTEND_PROD_PUBLISH_PROFILE }}"
          else
            echo "::set-output name=app-name::${{ secrets.FRONTEND_STAGING_APP_NAME }}"
            echo "::set-output name=publish-profile::${{ secrets.FRONTEND_STAGING_PUBLISH_PROFILE }}"
          fi

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.credentials.outputs.app-name }}
          publish-profile: ${{ steps.credentials.outputs.publish-profile }}
          package: client/dist/

  deploy-backend:
    needs: build-backend
    runs-on: ubuntu-latest
    
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: backend

      - name: Set credentials based on trigger
        id: credentials
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "::set-output name=app-name::${{ secrets.BACKEND_PROD_APP_NAME }}"
            echo "::set-output name=publish-profile::${{ secrets.BACKEND_PROD_PUBLISH_PROFILE }}"
          else
            echo "::set-output name=app-name::${{ secrets.BACKEND_STAGING_APP_NAME }}"
            echo "::set-output name=publish-profile::${{ secrets.BACKEND_STAGING_PUBLISH_PROFILE }}"
          fi

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.credentials.outputs.app-name }}
          publish-profile: ${{ steps.credentials.outputs.publish-profile }}
          package: server/target/
